@page "/classes"
@using Common.APIModels;
@using System.Diagnostics;
@using Microsoft.Extensions.Logging
@inject ILogger<Classes> Logger;
@inject HttpClient Http;

<PageTitle>Classes</PageTitle>

<div class = "wrapper-div">
    <div class = "wrapper-div-upper">
        <a href = '/' class = "app-name">hazir</a>
    </div>

    <div class = "wrapper-div-lower">
        <div class = "wrapper-div-sidebar">
            <div class = "nav-item">
                <button type="button" class = "nav-item-head" @onclick="@expandSidebar">
                    <span class = "oi oi-calendar"></span> Classes
                </button>
                @if (expandSubNav)
                {
                    if (classes == null)
                    {
                        <p class = "nav-subitem"><em>Loading...</em></p>
                    }
                    else
                    {
                            @foreach (var classData in classes)
                            {
                                <button type="button" class = "nav-subitem" @onclick="() => selectClass(classData)">
                                    <span class = "oi oi-pencil"></span>
                                    @classData.Name
                                </button>
                            }
                    }
                }
            </div>
        </div>

        <div class = "wrapper-div-middle">
            <button class = "take-attendance" >Take Attendance</button>
            <EditForm Model = "@Date">
                <InputDate id = "attendance-date" @bind-Value = "Date" />
            </EditForm>
        </div>

        <div class = "wrapper-div-right">
            @if (selectedClass == null)
            {
                <p class = "student-odd">Select any class to view students</p>
            }
            else
            {
                foreach(var student in selectedClass.Students)
                {
                    studentCount++;
                    if (studentCount % 2 == 0)
                    {
                        <p class = "student-even">@student.Name</p>
                    }
                    else
                    {
                        <p class = "student-odd">@student.Name</p>
                    }
                }
            }
        </div>
    </div>
</div>


@code{
    private List<ClassResponseModel> classes;
    private AttendanceResponseModel attendance;
    private ClassResponseModel selectedClass;
    private int studentCount = 0;

    private DateOnly Date;
    private bool expandSubNav;

    private void expandSidebar()
    {
        expandSubNav = !expandSubNav;
        this.selectedClass = null;
        studentCount = 0;
    }

    private void selectClass(ClassResponseModel classData)
    {
        this.selectedClass = classData;
        studentCount = 0;
    }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<List<ClassResponseModel>>("https://localhost:7204/Hazir/GetClassesByTeacher/teachers/79f4b45a-5043-4132-a168-07e21310062b");
        if (response != null)
        {
            this.classes = response;
        }
    }
}
